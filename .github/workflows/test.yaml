name: "build"
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  test-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: asg017/sqlite-versions@main
        id: sqlite-versions
        with:
          version: "3"
      - run: ls
      - run: python3 -c "import sqlite3; print(sqlite3.sqlite_version)"
      - run: |
          py_sqlite_version="$(python3 -c 'import sqlite3; print(sqlite3.sqlite_version)')"
          if [ $py_sqlite_version != "3.42.0" ]; then
            echo "should receive latest version"
            exit 1
          fi
        shell: bash

  test:
    strategy:
      fail-fast: false
      matrix:
        sqlite_version: ["3.39.0", "3.17.0"]
    runs-on: ubuntu-latest
    steps:
      - uses: asg017/sqlite-versions@main
        id: sqlite-versions
        with:
          version: ${{ matrix.sqlite_version }}
      - run: python3 -c "import sqlite3; print(sqlite3.sqlite_version)"
      - run: |
          py_sqlite_version="$(python3 -c 'import sqlite3; print(sqlite3.sqlite_version)')"
          if [  != "${{ matrix.sqlite_version }}" ]; then
            echo "version mismatch: $py_sqlite_version != ${{ matrix.sqlite_version }}"
            exit 1
          fi
        shell: bash
